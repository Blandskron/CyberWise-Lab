name: Release to Docker Hub

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"

concurrency:
  group: docker-release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build & Push (main/tags)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verificar ubicaciones de requirements
        run: |
          if [ -f app/requirements.txt ]; then
            echo "OK: app/requirements.txt encontrado"
          elif [ -f requirements.txt ]; then
            echo "OK: requirements.txt en raíz"
          else
            echo "ERROR: No se encontró requirements.txt (ni en raíz ni en app/)"
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blandskron/vuln-lab
          labels: |
            org.opencontainers.image.title=CyberWise-Lab
            org.opencontainers.image.description=Proyecto educativo
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=sha,prefix=sha-,format=short
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/heads/main') }}
            type=ref,event=tag

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
